<?php
/**
 * @file
 * Code for the Ding Redia RSS feature.
 */

include_once 'ding_redia_rss.features.inc';

/**
 * Implements hook_field_formatter_info().
 */
function ding_redia_rss_field_formatter_info() {
  return array(
    'ding_redia_rss_location' => array(
      'label' => t('RSS friendly location'),
      'field types' => array('addressfield'),
      'description' => t('Output address information on a single HTML stripped line.'),
    ),
    'ding_redia_rss_date_time' => array(
      'label' => t('RFC-2822 formatted date'),
      'field types' => array('datetime'),
      'description' => t('Format date and time as RFC-2822 date/time string.'),
    ),
  );
}

/**
 * Implements hook_field_formatter_view().
 */
function ding_redia_rss_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $element = array();
  switch ($display['type']) {
    case 'ding_redia_rss_date_time':
      foreach ($items as $delta => $item) {
        $element[$delta] = array(
          '#markup' => strtotime($item[$display['settings']['fromto']]),
        );
      }
      break;
    case 'ding_redia_rss_location':
      foreach ($items as $delta => $item) {
        foreach ($item as $part) {
          if (!empty($part)) {
            $location[] = $part;
          }
        }
        $element[$delta] = array(
          '#markup' => implode(', ', $location),
        );
      }
      break;
  }
  return $element;
}

/**
 * Implements hook_field_formatter_settings_form().
 */
function ding_redia_rss_field_formatter_settings_form($field, $instance, $view_mode, $form, &$form_state) {
  $display = $instance['display'][$view_mode];
  $settings = $display['settings'];
  $form = array();
  $form['fromto'] = array(
    '#title' => t('Display:'),
    '#type' => 'select',
    '#options' => array(
      'both' => t('Both Start and End dates'),
      'value' => t('Start date only'),
      'value2' => t('End date only'),
    ),
    '#access' => $field['settings']['todate'],
    '#default_value' => $settings['fromto'],
    '#weight' => 1,
  );

  return $form;
}

/**
 * Implements hook_views_rss_namespaces().
 *
 * @return Array
 */
function ding_redia_rss_views_rss_namespaces() {
  $namespaces['redia-rss'] = array(
    'prefix' => 'xmlns',
    'uri' => 'http://xml.redia.dk/rss',
  );
  return $namespaces;
}

/**
 * Implements hook_views_rss_item_elements().
 *
 * @return Array
 */
function ding_redia_rss_views_rss_item_elements() {
  return array(
    'redia-rss:subheadline' => array(
      'title' => t('Subheadline'),
      'description' => t('The subheadline'),
    ),
    'redia-rss:arrangement-starttime' => array(
      'title' => t('Event starttime'),
      'description' => t('When does the event start (UTC Timestamp)'),
    ),
    'redia-rss:arrangement-endtime' => array(
      'title' => t('Event endtime'),
      'description' => t('When does the event end (UTC Timestamp)'),
    ),
    'redia-rss:arrangement-location' => array(
      'title' => t('Event location'),
      'description' => t('The location of the event'),
    ),
    'redia-rss:arrangement-price' => array(
      'title' => t('Event price'),
      'description' => t('The price of the event.'),
    ),
  );
}